package algvis.fibonacciheap;

import java.awt.image.BufferedImage;

import algvis.core.Node;
import algvis.core.View;

public class FibNode extends Node {
	float vx = 7, vy = 0;

	public static final int array[] = { 38, 39, 23, 29, 50, 21, 23, 19, 33, 6,
			19, 20, 11, 15, 14, 18, 4, 18, 17, 25, 19, 3, 15, 4, 17, 15, 6, 43,
			3, 14, 3, 16, 13, 6, 28, 11, 9, 2, 13, 3, 15, 12, 4, 4, 2, 3, 20,
			15, 4, 5, 2, 11, 3, 15, 10, 5, 49, 2, 5, 1, 11, 3, 14, 9, 4, 37,
			10, 6, 2, 4, 2, 10, 3, 13, 8, 4, 12, 7, 19, 1, 11, 3, 4, 1, 4, 1,
			10, 2, 13, 8, 3, 11, 2, 9, 3, 14, 1, 15, 2, 2, 2, 4, 1, 8, 3, 12,
			7, 3, 10, 2, 27, 1, 17, 2, 3, 1, 4, 1, 8, 2, 12, 7, 3, 9, 2, 27, 1,
			20, 1, 3, 1, 12, 3, 11, 7, 3, 9, 1, 14, 1, 13, 1, 21, 2, 2, 1, 12,
			2, 11, 7, 3, 8, 1, 15, 1, 36, 2, 2, 1, 11, 3, 10, 7, 2, 46, 10, 23,
			3, 9, 6, 3, 43, 16, 20, 3, 9, 6, 3, 42, 19, 19, 3, 8, 5, 3, 13, 11,
			17, 5, 4, 13, 19, 3, 7, 3, 4, 12, 15, 14, 4, 6, 9, 2, 3, 15, 7, 6,
			2, 4, 9, 2, 2, 16, 12, 4, 5, 17, 2, 3, 10, 7, 5, 2, 3, 3, 1, 11,
			19, 8, 3, 3, 19, 4, 1, 12, 3, 1, 3, 4, 1, 3, 3, 1, 18, 14, 7, 10,
			12, 2, 3, 1, 17, 1, 1, 3, 3, 1, 2, 2, 2, 25, 7, 9, 7, 6, 2, 16, 9,
			5, 1, 1, 3, 2, 0, 3, 1, 1, 2, 3, 24, 3, 13, 3, 8, 3, 12, 13, 5, 1,
			1, 3, 1, 0, 2, 5, 1, 3, 6, 17, 2, 26, 5, 6, 7, 7, 3, 4, 1, 2, 3, 0,
			2, 1, 1, 2, 1, 2, 9, 16, 2, 27, 15, 10, 3, 4, 1, 1, 3, 0, 2, 1, 1,
			2, 1, 1, 5, 2, 5, 3, 2, 9, 2, 29, 10, 6, 2, 6, 3, 3, 1, 2, 2, 0, 2,
			1, 1, 2, 1, 2, 1, 7, 8, 8, 3, 45, 2, 6, 3, 3, 1, 2, 2, 0, 2, 1, 1,
			2, 1, 10, 7, 8, 4, 43, 5, 6, 2, 3, 1, 3, 1, 0, 2, 1, 1, 2, 1, 7, 2,
			3, 2, 10, 4, 42, 7, 6, 3, 2, 1, 3, 1, 0, 2, 1, 1, 2, 1, 7, 2, 13,
			5, 14, 6, 1, 1, 19, 11, 4, 3, 2, 1, 3, 1, 0, 4, 2, 2, 5, 3, 12, 4,
			17, 6, 1, 2, 15, 6, 3, 6, 2, 3, 2, 1, 3, 1, 0, 3, 4, 2, 4, 3, 11,
			5, 20, 3, 8, 1, 7, 6, 5, 7, 1, 3, 2, 1, 2, 2, 1, 4, 7, 4, 10, 6,
			12, 5, 4, 2, 13, 7, 6, 3, 6, 2, 3, 1, 2, 2, 1, 3, 1, 2, 5, 5, 6, 3,
			1, 6, 9, 8, 2, 3, 10, 8, 8, 3, 5, 3, 6, 2, 2, 2, 3, 2, 3, 5, 5, 1,
			8, 3, 13, 3, 1, 4, 7, 10, 8, 4, 5, 2, 3, 1, 2, 3, 2, 3, 6, 8, 13,
			3, 3, 1, 12, 3, 4, 9, 3, 2, 6, 6, 5, 2, 2, 2, 2, 2, 1, 3, 2, 6, 9,
			13, 6, 16, 9, 6, 2, 5, 6, 9, 2, 2, 3, 1, 3, 3, 5, 5, 1, 5, 12, 5,
			13, 8, 9, 3, 2, 8, 8, 2, 3, 3, 2, 4, 2, 5, 5, 1, 8, 22, 11, 10, 13,
			13, 3, 3, 4, 2, 5, 5, 1, 12, 12, 16, 11, 8, 2, 3, 11, 4, 4, 4, 3,
			4, 4, 2, 2, 3, 27, 6, 2, 9, 8, 3, 3, 12, 4, 4, 4, 3, 4, 4, 2, 2, 4,
			22, 10, 3, 4, 11, 3, 3, 12, 4, 5, 4, 3, 4, 4, 2, 2, 4, 2, 7, 4, 6,
			2, 11, 3, 2, 12, 4, 2, 12, 4, 6, 4, 3, 4, 8, 3, 3, 8, 2, 7, 2, 12,
			12, 1, 3, 3, 3, 12, 3, 7, 4, 3, 4, 9, 2, 3, 8, 2, 7, 2, 9, 13, 3,
			3, 2, 3, 12, 3, 8, 4, 3, 4, 17, 4, 3, 7, 3, 4, 14, 7, 2, 1, 3, 13,
			3, 8, 4, 3, 4, 49, 10, 5, 13, 3, 9, 4, 3, 4, 48, 11, 4, 14, 2, 10,
			4, 3, 4, 43, 3, 2, 11, 3, 14, 3, 10, 4, 3, 4, 40, 6, 2, 9, 4, 15,
			2, 11, 4, 3, 5, 35, 10, 3, 7, 4, 15, 3, 11, 4, 3, 5, 6, 1, 24, 1,
			3, 10, 3, 5, 5, 15, 3, 12, 4, 3, 5, 3, 1, 2, 2, 2, 3, 11, 8, 2, 12,
			3, 3, 4, 16, 3, 13, 4, 3, 6, 6, 1, 3, 3, 2, 5, 3, 8, 3, 11, 9, 16,
			3, 14, 4, 3, 6, 6, 2, 3, 2, 3, 5, 2, 8, 3, 12, 6, 17, 3, 15, 4, 3,
			7, 4, 3, 3, 3, 2, 5, 2, 8, 3, 10, 7, 7, 1, 5, 1, 3, 3, 16, 4, 3, 8,
			9, 3, 3, 4, 3, 7, 3, 6, 8, 7, 2, 5, 1, 3, 4, 17, 4, 3, 9, 10, 1, 3,
			4, 3, 7, 3, 2, 10, 8, 1, 5, 2, 3, 4, 18, 4, 2, 13, 36, 9, 2, 5, 2,
			3, 5, 19, 4, 2, 18, 26, 12, 2, 5, 2, 4, 4, 21, 4, 2, 54, 2, 5, 2,
			4, 5, 22, 4, 2, 10, 1, 40, 2, 5, 2, 5, 5, 24, 4, 2, 11, 1, 36, 3,
			5, 2, 5, 5, 26, 4, 2, 4, 1, 7, 1, 33, 2, 6, 2, 5, 6, 27, 4, 2, 5,
			1, 8, 2, 25, 4, 5, 2, 7, 6, 29, 4, 2, 6, 1, 10, 19, 9, 4, 7, 6, 32,
			4, 2, 7, 2, 32, 4, 9, 6, 34, 4, 2, 9, 1, 25, 4, 13, 6, 36, 4, 2,
			11, 19, 20, 6, 38, 4, 3, 47, 6, 40, 5, 2, 45, 5, 43, 5, 3, 41, 6,
			45, 6, 3, 36, 8, 47, 7, 4, 29, 11, 49, 8, 5, 23, 11, 53, 9, 6, 17,
			11, 57, 11, 27, 62, 14, 20, 66, };
	public static BufferedImage img = new BufferedImage(100, 81,
			BufferedImage.TYPE_INT_BGR);

	static {
		int x = 0, y = 0, c = 0;
		for (int i = 0; i < array.length; ++i) {
			for (int j = 0; j < array[i]; ++j) {
				if (c == 1)
					FibNode.img.setRGB(y++, x, 0);
				else
					FibNode.img.setRGB(y++, x, 0xffffff);
			}
			if (y >= 100) {
				c = 0;
				++x;
				y = 0;
			} else {
				c = 1 - c;
			}
		}
	}

	public void draw(View v) {
		v.drawImage(img, x, y, 100, 100);
	}
	
	public void move() {
		if (x < -50 || x > 500) vx = -vx;
		if (y > 200) { vy = -vy; }
		x += (int)vx;
		y += (int)vy;
		vy += 0.4;
	}
}
